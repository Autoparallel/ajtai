name: Check
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  format:
    name: fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: install Rust
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt

      - name: install taplo
        run: cargo install taplo-cli

      - name: run Rust fmt
        run: cargo fmt --all -- --check

      - name: run TOML fmt
        run: taplo fmt --check

  build-and-test:
    name: ${{ matrix.job }} / ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        job: [build, test]
        target: 
          - aarch64-unknown-linux-gnu
          - x86_64-unknown-linux-gnu
          - wasm32-unknown-unknown
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@nightly
        with:
          targets: ${{ matrix.target }}
          components: clippy

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          key: check/${{ matrix.job }}/${{ matrix.target }}

      - name: Build
        if: matrix.job == 'build'
        run: cargo build --target ${{ matrix.target }} --workspace

      - name: Clippy
        if: matrix.job == 'build'
        run: cargo clippy --target ${{ matrix.target }} --all-targets --all-features -- --deny warnings

      - name: Test
        if: matrix.job == 'test' && matrix.target != 'wasm32-unknown-unknown'
        run: cargo test --target ${{ matrix.target }} --workspace

      - name: Setup wasm-pack
        if: matrix.job == 'test' && matrix.target == 'wasm32-unknown-unknown'
        uses: jetli/wasm-pack-action@v0.4.0

      - name: Test WASM
        if: matrix.job == 'test' && matrix.target == 'wasm32-unknown-unknown'
        run: wasm-pack test --node

  udeps:
    name: udeps
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@nightly
      
      - name: Install cargo-udeps
        run: cargo install cargo-udeps --locked
      
      - name: Check unused dependencies
        run: cargo udeps --workspace

  semver:
    name: semver
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-semver-checks
        uses: taiki-e/install-action@cargo-semver-checks

      - name: Run semver checks
        run: cargo semver-checks check-release --workspace